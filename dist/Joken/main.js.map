{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/environments/environment.ts","webpack:///./src/joken/components/game/game.component.html","webpack:///./src/joken/components/game/game.component.scss","webpack:///./src/joken/components/game/game.component.ts","webpack:///./src/joken/components/match/match.component.html","webpack:///./src/joken/components/match/match.component.scss","webpack:///./src/joken/components/match/match.component.ts","webpack:///./src/joken/components/rooms/rooms.component.html","webpack:///./src/joken/components/rooms/rooms.component.scss","webpack:///./src/joken/components/rooms/rooms.component.ts","webpack:///./src/joken/joken.component.css","webpack:///./src/joken/joken.component.html","webpack:///./src/joken/joken.component.ts","webpack:///./src/joken/joken.module.ts","webpack:///./src/joken/models/player.model.ts","webpack:///./src/joken/models/room.model.ts","webpack:///./src/joken/pipes/choice.pipe.ts","webpack:///./src/joken/pipes/translate.pipe.ts","webpack:///./src/joken/services/dom.service.ts","webpack:///./src/joken/services/game-socket.service.ts","webpack:///./src/joken/services/guid.generator.ts","webpack:///./src/joken/services/match-dom.service.ts","webpack:///./src/joken/services/player.service.ts","webpack:///./src/joken/services/rooms.service.ts","webpack:///./src/joken/services/socket.service.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","module.exports = \"<div id=\\\"joken\\\">\\n  <joken-rooms [rooms]=\\\"rooms\\\"></joken-rooms>\\n</div>\"","module.exports = \"#joken {\\n  width: 100%;\\n  height: 100vh;\\n  background: url(\\\"/assets/background-blue.gif\\\");\\n  background-size: cover;\\n  background-position: center; }\\n\"","import { Component } from '@angular/core';\nimport Room from '@models/room.model';\nimport RoomService from '@services/rooms.service';\nimport GuidGenerator from '@services/guid.generator';\nimport PlayerService from '@services/player.service';\nimport Player from '@models/player.model';\n\n@Component({\n  selector: 'joken-po',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss']\n})\nexport class GameComponent {\n\n  rooms: Room[];\n\n  constructor(private roomService: RoomService,\n    private playerService: PlayerService,\n    private guidGenerator: GuidGenerator) {\n\n    this.roomService.fetchRooms().subscribe(this.fillRooms);\n\n    const guid = this.guidGenerator.guid();\n    const newPlayer = new Player(guid, `Player ${guid}`);\n    this.playerService.setSessionPlayer(newPlayer);\n  }\n\n  fillRooms = (rooms) => {\n    this.rooms = rooms;\n  }\n\n}\n","module.exports = \"<div id=\\\"overlay\\\">\\n\\n  <video #video id=\\\"match-video\\\" [hidden]=\\\"!isMatchRunning\\\">\\n    <source src=\\\"/assets/Batman-vs-Superman.mp4\\\" type=\\\"video/mp4\\\" />\\n    Browser não suportado\\n  </video>\\n\\n  <div class=\\\"modal fade show d-block\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\n\\n      <div class=\\\"modal-content\\\" *ngIf=\\\"gameEnded else playingTemplate\\\">\\n        <div class=\\\"modal-body\\\">\\n          <h1>{{matchResult | translate }}</h1>\\n          <h3>Sua escolha: {{ myChoice | choice }}</h3>\\n          <h3>Escolha adversária: {{ enemyChoice | choice }}</h3>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" (click)=\\\"getOut()\\\">Sair</button>\\n        </div>\\n      </div>\\n\\n      <ng-template #playingTemplate>\\n        <div class=\\\"modal-content\\\" *ngIf=\\\"!gameEnded\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\">{{ room.name }}</h5>\\n            <h5 class=\\\"modal-title\\\">{{ room.players.length }}/2</h5>\\n          </div>\\n\\n\\n          <div class=\\\"modal-body\\\" *ngIf=\\\"room.players.length < 2\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <h2>Esperando outro jogador...</h2>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"modal-body\\\" *ngIf=\\\"room.players.length >= 2\\\">\\n            <div class=\\\"row\\\">\\n              <h3 class=\\\"col\\\">Sua Jogada: {{ myChoice | choice }}</h3>\\n            </div>\\n            <div class=\\\"row\\\" id=\\\"match-play-selection\\\">\\n              <div class=\\\"col\\\">\\n                <button class=\\\"btn btn-primary item-btn\\\" (click)=\\\"chooseOption('rock', 'Pedra')\\\" [disabled]=\\\"choiceLabel\\\">\\n                  <img class=\\\"card-img-top joken-po-img-title animated bounce\\\" src=\\\"/assets/rock-item.png\\\" alt=\\\"Pedra\\\" />\\n                </button>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <button class=\\\"btn btn-primary item-btn bounce\\\" (click)=\\\"chooseOption('paper', 'Papel')\\\" [disabled]=\\\"choiceLabel\\\">\\n                  <img class=\\\"card-img-top joken-po-img-title animated bounce\\\" src=\\\"/assets/paper-item.png\\\" alt=\\\"Papel\\\" />\\n                </button>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <button class=\\\"btn btn-primary item-btn bounce\\\" (click)=\\\"chooseOption('scissor', 'Tesoura')\\\" [disabled]=\\\"choiceLabel\\\">\\n                  <img class=\\\"card-img-top joken-po-img-title animated bounce\\\" src=\\\"/assets/scissor-item.png\\\" alt=\\\"Tesoura\\\" />\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button *ngIf=\\\"room.players.length >= 2\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" disabled>\\n              <span *ngIf=\\\"!allPlayersChoose()\\\"> Façam suas escolhas... </span>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"getOut()\\\">Sair</button>\\n          </div>\\n        </div>\\n      </ng-template>\\n    </div>\\n  </div>\\n\\n</div>\"","module.exports = \".animated {\\n  -webkit-animation-duration: .5s;\\n  animation-duration: .5s;\\n  -webkit-animation-fill-mode: both;\\n  animation-fill-mode: both;\\n  -webkit-animation-timing-function: linear;\\n  animation-timing-function: linear;\\n  animation-iteration-count: infinite;\\n  -webkit-animation-iteration-count: infinite; }\\n\\n@-webkit-keyframes bounce {\\n  0%, 100% {\\n    -webkit-transform: translateY(0); }\\n  50% {\\n    -webkit-transform: translateY(-5px); } }\\n\\n@keyframes bounce {\\n  0%, 100% {\\n    -webkit-transform: translateY(0);\\n            transform: translateY(0); }\\n  50% {\\n    -webkit-transform: translateY(-5px);\\n            transform: translateY(-5px); } }\\n\\n.bounce {\\n  -webkit-animation-name: bounce;\\n  animation-name: bounce; }\\n\\n#overlay {\\n  position: fixed;\\n  background: rgba(0, 0, 0, 0.9);\\n  width: 100vw;\\n  height: 100vh;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0; }\\n\\n#match-play-selection .item-btn {\\n  height: 250px; }\\n\\n#match-play-selection .item-btn:hover {\\n  padding: 0px; }\\n\\n.match-option-button {\\n  width: 250px;\\n  height: 200px; }\\n\\n.match-option-button img {\\n  width: 250px;\\n  height: 200px; }\\n\\n#match-video {\\n  width: 100%;\\n  height: 100%;\\n  position: fixed;\\n  z-index: 9999; }\\n\"","import { Component, OnInit, Input, ViewChild, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, interval, timer, Observable, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport GameSocketService from '@services/game-socket.service';\nimport Match from '@models/match.model';\nimport PlayerService from '@services/player.service';\n\n@Component({\n  selector: 'joken-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.scss']\n})\nexport class MatchComponent implements OnInit, OnDestroy {\n\n  @ViewChild('video') video: any;\n  private room$ = new BehaviorSubject<any>({});\n  public match: Match = {\n    id: undefined,\n    room: undefined,\n    players: [],\n    result: undefined\n  };\n  public isMatchRunning = false;\n  public gameEnded = false;\n  public matchResult;\n  public timer = 1;\n  public myChoice;\n  public enemyChoice;\n\n  private onMatchStartedSubscription: Subscription;\n  private playerChoosedSubscription: Subscription;\n\n  constructor(private gameSocketService: GameSocketService,\n    private playerService: PlayerService) {\n  }\n\n  @Input()\n  set room(value) {\n    this.room$.next(value);\n  }\n\n  get room() {\n    return this.room$.getValue();\n  }\n\n  ngOnInit() {\n    this.room$.subscribe(this.waitPlayersToStartMatch);\n    this.onMatchStartedSubscription = this.gameSocketService.onMatchStarted(this.room).subscribe(this.enableMatchPlay);\n    this.playerChoosedSubscription = this.gameSocketService.onPlayerChoosed(this.room).subscribe(this.playerChoosedValue);\n  }\n\n  ngOnDestroy() {\n    this.room$.unsubscribe();\n    this.onMatchStartedSubscription.unsubscribe();\n    this.playerChoosedSubscription.unsubscribe();\n  }\n\n  getOut() {\n    location.reload();\n  }\n\n  waitPlayersToStartMatch = (room) => {\n    if (room.players.length === 2) {\n      this.gameSocketService.startMatch(room);\n    }\n  }\n\n  playerChoosedValue = ({ match }) => {\n    this.match = match;\n    if (this.allPlayersChoose()) {\n      this.start();\n    }\n  }\n\n  enableMatchPlay = (match) => {\n    this.match = match;\n  }\n\n  updateMatchPlayerInfo(match, player) {\n    const playerIndex = match.players.findIndex(x => x.id === this.playerService.getSessionPlayer().id);\n    match.players[playerIndex] = player;\n  }\n\n  chooseOption(choice, label) {\n    const player = { ...this.playerService.getSessionPlayer(), choice };\n    this.updateMatchPlayerInfo(this.match, player);\n    this.gameSocketService.emitPlayerChoose(player, this.match, choice);\n    this.myChoice = choice;\n  }\n\n  allPlayersChoose() {\n    return this.match ? this.match.players.every(player => !!player.choice) : false;\n  }\n\n  getEnemyChoice() {\n    const myself = this.playerService.getSessionPlayer();\n    const [enemy] = this.match.players.filter(player => player.id !== myself.id);\n    return enemy.choice;\n  }\n\n  start() {\n    this.isMatchRunning = true;\n    this.video.nativeElement.play();\n    setTimeout(() => {\n      this.isMatchRunning = false;\n      this.gameEnded = true;\n      const player = this.playerService.getSessionPlayer();\n      this.matchResult = this.match.result[player.id];\n      this.enemyChoice = this.getEnemyChoice();\n      this.gameSocketService.disconnect();\n    }, 4600);\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row align-items-center room-box-container\\\">\\n    <div class=\\\"col\\\"></div>\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <img class=\\\"card-img-top joken-po-img-title\\\" src=\\\"/assets/joken-title-no-background.png\\\" alt=\\\"Card image cap\\\" />\\n          <h3 class=\\\"card-title text-center mt-5\\\">Rooms</h3>\\n          <div class=\\\"row mb-2\\\" *ngFor=\\\"let room of rooms\\\">\\n            <div class=\\\"col align-self-center\\\">\\n              <span>{{room.name}}</span>\\n            </div>\\n            <div class=\\\"col align-self-center\\\">\\n              <span>{{room.players.length}}/2 Players</span>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <button class=\\\"btn btn-lg btn-block btn-primary\\\" (click)=\\\"enterRoom($event, room)\\\" [disabled]=\\\"room.players.length >= 2\\\">Entrar</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col\\\"></div>\\n  </div>\\n</div>\"","module.exports = \".room-box-container {\\n  height: 100vh; }\\n\\n.joken-po-img-title {\\n  margin-top: -100px; }\\n\"","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport Room from '@models/room.model';\nimport GameSocketService from '@services/game-socket.service';\nimport PlayerService from '@services/player.service';\nimport MatchDomService from '@services/match-dom.service';\n\n@Component({\n  selector: 'joken-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.scss']\n})\nexport class RoomsComponent implements OnInit, OnDestroy {\n\n  private rooms$ = new BehaviorSubject<Room[]>([]);\n  private matchRoom: Room = new Room('', []);\n  private gameSocketSubscription: Subscription;\n\n  constructor(private matchService: MatchDomService,\n    private gameSocketService: GameSocketService,\n    private playerService: PlayerService) {\n\n  }\n\n  @Input()\n  set rooms(rooms) {\n    this.rooms$.next(rooms);\n  }\n\n  get rooms() {\n    return this.rooms$.getValue();\n  }\n\n  ngOnInit() {\n    this.gameSocketService.connect();\n    this.gameSocketService.onRoomsUpdate().subscribe(this.updateRooms);\n  }\n\n  ngOnDestroy() {\n    this.rooms$.unsubscribe();\n    this.gameSocketSubscription.unsubscribe();\n    this.gameSocketService.disconnect();\n  }\n\n  updateRooms = (rooms: Room[]) => {\n    this.rooms = rooms;\n    if (this.matchRoom) {\n      this.matchRoom = rooms.find(room => room.id === this.matchRoom.id);\n      this.matchService.updateMatchRoom(this.matchRoom);\n    }\n  }\n\n  enterRoom(e: Event, room: Room) {\n    const player = this.playerService.getSessionPlayer();\n    this.matchRoom = room;\n    this.gameSocketService.emitEnteredRoom(room, player);\n    this.matchService.startMatchRoom(room);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<joken-po id=\\\"main\\\"></joken-po>   \"","import { Component } from '@angular/core';\nimport SocketService from '@services/socket.service';\n\n@Component({\n  selector: 'joken-root',\n  templateUrl: './joken.component.html',\n  styleUrls: ['./joken.component.css']\n})\nexport class JokenComponent {\n\n  constructor() {\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { JokenComponent } from './joken.component';\nimport { GameComponent } from '@components/game/game.component';\nimport { RoomsComponent } from '@components/rooms/rooms.component';\nimport { MatchComponent } from '@components/match/match.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslatePipe } from './pipes/translate.pipe';\nimport { ChoicePipe } from './pipes/choice.pipe';\n\n@NgModule({\n  declarations: [\n    JokenComponent,\n    GameComponent,\n    RoomsComponent,\n    MatchComponent,\n    TranslatePipe,\n    ChoicePipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [JokenComponent],\n  entryComponents: [MatchComponent]\n})\nexport class JokenModule { }\n","\r\nexport default class Player {\r\n    id: string;\r\n    name: string;\r\n    choice: number = undefined;\r\n    constructor(id: string, name: string) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n}\r\n","import Player from './player.model';\r\n\r\nexport default class Room {\r\n    private _id: number;\r\n    private _name: string;\r\n    private _players: Player[];\r\n\r\n    constructor(name: string, players: Player[]) {\r\n        this._name = name;\r\n        this._players = players;\r\n    }\r\n\r\n    set id(value: number) {\r\n        this._id = value;\r\n    }\r\n\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    set name(name: string) {\r\n        this._name = name;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set players(players: Player[]) {\r\n        this._players = players;\r\n    }\r\n\r\n    get players(): Player[] {\r\n        return this._players;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\nconst translationMap = {\n  'rock': 'Pedra',\n  'paper': 'Papel',\n  'scissor': 'Tesoura'\n};\n\n@Pipe({\n  name: 'choice'\n})\nexport class ChoicePipe implements PipeTransform {\n\n  transform(value: any): any {\n    return translationMap[value];\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nconst translationMap = {\n  'Winner': 'Você VENCEU!!',\n  'Loser': 'Você PERDEU!',\n  'Draw': 'Empate!'\n};\n\n@Pipe({\n  name: 'translate'\n})\nexport class TranslatePipe implements PipeTransform {\n\n  transform(value: any): any {\n    return translationMap[value];\n  }\n\n}\n","import { Injectable, ComponentFactoryResolver, Type, Injector, ApplicationRef, EmbeddedViewRef, ComponentRef } from '@angular/core';\r\nimport ActiveComponent from '../types/active-component.interface';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport default class DomService {\r\n\r\n    private activeComponents: Map<string, ActiveComponent> = new Map();\r\n\r\n    constructor(private componentFactory: ComponentFactoryResolver,\r\n        private injector: Injector,\r\n        private applicationReference: ApplicationRef) { }\r\n\r\n    addComponent(component: Type<{}>, identifier: string, DOMIdToAppendComponent: string, data?: object) {\r\n        const componentReference = this.componentFactory\r\n            .resolveComponentFactory(component)\r\n            .create(this.injector);\r\n\r\n        this.applicationReference.attachView(componentReference.hostView);\r\n        const domElement = (componentReference.hostView as EmbeddedViewRef<any>)\r\n            .rootNodes[0] as HTMLElement;\r\n        this.activeComponents.set(identifier, { componentReference, domElement });\r\n\r\n        domElement.classList.add(identifier);\r\n        document.getElementById(DOMIdToAppendComponent).appendChild(domElement);\r\n\r\n        if (data) {\r\n            Object.entries(data).forEach(([key, value]) => {\r\n                componentReference.instance[key] = value;\r\n            });\r\n        }\r\n    }\r\n\r\n    updateComponentData(identifier: string, data: object) {\r\n        const activeComponent = this.activeComponents.get(identifier);\r\n        if (activeComponent) {\r\n            Object.entries(data).forEach(([key, value]) => {\r\n                activeComponent.componentReference.instance[key] = value;\r\n            });\r\n        }\r\n    }\r\n\r\n    removeComponent(identifier: string) {\r\n        const activeComponent = this.activeComponents.get(identifier);\r\n        this.applicationReference\r\n            .detachView(activeComponent.componentReference.hostView);\r\n        activeComponent.domElement.remove();\r\n    }\r\n\r\n    removeAllComponents() {\r\n        this.activeComponents.forEach((activeComponent: ActiveComponent, identifier) => {\r\n            this.applicationReference.detachView(activeComponent.componentReference.hostView);\r\n            activeComponent.domElement.remove();\r\n        });\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport SocketService from '@services/socket.service';\r\nimport Room from '@models/room.model';\r\nimport { Events } from '@constants/events.constants';\r\nimport Match from '@models/match.model';\r\nimport Player from '@models/player.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport default class GameSocketService {\r\n\r\n    constructor(private socketService: SocketService) { }\r\n\r\n    connect() {\r\n        this.socketService.connect();\r\n    }\r\n\r\n    disconnect() {\r\n        this.socketService.disconnect();\r\n    }\r\n\r\n    onRoomsUpdate(): Observable<any> {\r\n        return this.socketService.onEvent(Events.ROOM_UPDATE);\r\n    }\r\n\r\n    emitEnteredRoom(room: Room, player: Player) {\r\n        this.socketService.emit(Events.PLAYER_ENTER_ROOM, { room, player });\r\n    }\r\n\r\n    startMatch(room: Room) {\r\n        this.socketService.emit(Events.START_MATCH, room);\r\n    }\r\n\r\n    onMatchStarted(room: Room): Observable<any> {\r\n        return this.socketService.onEvent(`${Events.MATCH_STARTED}-${room.id}`);\r\n    }\r\n\r\n    emitPlayerChoose(player: Player, match: Match, choice: number) {\r\n        this.socketService.emit(Events.PLAYER_CHOOSE_VALUE, { player, match, choice });\r\n    }\r\n\r\n    onPlayerChoosed(room: Room): Observable<any> {\r\n        return this.socketService.onEvent(`${Events.PLAYER_CHOOSE_VALUE}-${room.id}`);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport default class GuidGenerator {\r\n\r\n    constructor() { }\r\n    guid() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n            this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n    s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport DomService from '@services/dom.service';\r\nimport { MatchComponent } from '@components/match/match.component';\r\nimport Room from '@models/room.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport default class MatchDomService {\r\n\r\n    private readonly COMPONENT_IDENTIFIER: string = 'match-modal';\r\n\r\n    constructor(private domService: DomService) { }\r\n\r\n    startMatchRoom(room: Room) {\r\n        this.domService.addComponent(MatchComponent, this.COMPONENT_IDENTIFIER, 'main', { room });\r\n    }\r\n\r\n    updateMatchRoom(room: Room) {\r\n        this.domService.updateComponentData(this.COMPONENT_IDENTIFIER, { room });\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport Player from '@models/player.model';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport default class PlayerService {\r\n\r\n    private sessionPlayer$ = new BehaviorSubject<Player>(undefined);\r\n    public onSessionPlayerChange = this.sessionPlayer$.asObservable();\r\n\r\n    constructor() { }\r\n\r\n    setSessionPlayer(player: Player) {\r\n        this.sessionPlayer$.next(player);\r\n    }\r\n\r\n    getSessionPlayer(): Player {\r\n        return this.sessionPlayer$.getValue();\r\n    }\r\n\r\n}\r\n","\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport roomsMock from '../mocks/rooms.mock';\r\nimport Room from '../models/room.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServerConstants } from '@constants/server.constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport default class RoomService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    fetchRooms(): Observable<Room[]> {\r\n        return this.http.get<Room[]>(ServerConstants.SERVER_ADDRESS + '/rooms');\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport * as SocketIO from 'socket.io-client';\r\nimport { Observable } from 'rxjs';\r\nimport { ServerConstants } from '@constants/server.constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport default class SocketService {\r\n\r\n    private socket: SocketIOClient.Socket;\r\n\r\n    constructor() { }\r\n\r\n    connect(): SocketIOClient.Socket {\r\n        this.socket = SocketIO(ServerConstants.SERVER_ADDRESS);\r\n        return this.socket;\r\n    }\r\n\r\n    disconnect(): void {\r\n        this.socket.disconnect();\r\n    }\r\n\r\n    onMessage(): Observable<any> {\r\n        return new Observable<any>(observer => {\r\n            this.socket.on('message', data => observer.next(data));\r\n        });\r\n    }\r\n\r\n    onEvent(event: string): Observable<any> {\r\n        return new Observable<any>(observer => {\r\n            this.socket.on(event, data => observer.next(data));\r\n        });\r\n    }\r\n\r\n    emit(event: string, message: object) {\r\n        this.socket.emit(event, message);\r\n    }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { JokenModule } from './joken/joken.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(JokenModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}